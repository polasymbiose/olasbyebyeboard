{"version":3,"sources":["assets/boo.mp3","assets/yes.mp3","assets/lol.mp3","assets/brainfuck.mp3","assets/wow.mp3","assets/love.mp3","assets/thinking.mp3","assets sync /^/.//.*/.png$","assets/boo.png","assets/brainfuck.png","assets/lol.png","assets/love.png","assets/thinking.png","assets/wow.png","assets/yes.png","components/Animoji/Animoji.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","Animoji","src","audio","setactive","active","useState","state","toggle","hover","sethover","x","useSpring","from","config","mass","tension","friction","y","div","onClick","play","onMouseEnter","onMouseLeave","onMouseOver","style","transform","interpolate","range","output","require","App","className","Audio","yes","lol","love","boo","thinking","wow","brainfuck","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.958d757c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/boo.fa8147dc.mp3\";","module.exports = __webpack_public_path__ + \"static/media/yes.01f0e794.mp3\";","module.exports = __webpack_public_path__ + \"static/media/lol.f04333bc.mp3\";","module.exports = __webpack_public_path__ + \"static/media/brainfuck.950f5c28.mp3\";","module.exports = __webpack_public_path__ + \"static/media/wow.7960067a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/love.19b9e153.mp3\";","module.exports = __webpack_public_path__ + \"static/media/thinking.6fa45fe5.mp3\";","var map = {\n\t\"./boo.png\": 21,\n\t\"./brainfuck.png\": 22,\n\t\"./lol.png\": 23,\n\t\"./love.png\": 24,\n\t\"./thinking.png\": 25,\n\t\"./wow.png\": 26,\n\t\"./yes.png\": 27\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 20;","module.exports = __webpack_public_path__ + \"static/media/boo.02583e29.png\";","module.exports = __webpack_public_path__ + \"static/media/brainfuck.89fb2704.png\";","module.exports = __webpack_public_path__ + \"static/media/lol.ecb12f0d.png\";","module.exports = __webpack_public_path__ + \"static/media/love.95364617.png\";","module.exports = __webpack_public_path__ + \"static/media/thinking.69d2b71f.png\";","module.exports = __webpack_public_path__ + \"static/media/wow.397167f9.png\";","module.exports = __webpack_public_path__ + \"static/media/yes.d3ff40c1.png\";","import React, { useState } from 'react'\nimport { animated, useSpring } from 'react-spring'\nimport './Animoji.css'\n\nfunction Animoji({ src, audio, setactive, active }) {\n  const [state, toggle] = useState(true)\n  const [hover, sethover] = useState(false)\n  const { x } = useSpring({\n    from: { x: 0 },\n    x: state ? 1 : 0,\n    config: { mass: 4, tension: 400, friction: 12 }\n  })\n  const { y } = useSpring({\n    from: { y: 0 },\n    y: hover ? 1 : 0,\n    config: { mass: 1, tension: 150, friction: 12 }\n  })\n\n  const handleClick = () => {\n    audio.play()\n    toggle(!state)\n    setactive(src)\n  }\n  return (\n    <div>\n      <animated.div\n        onClick={handleClick}\n        onMouseEnter={() => sethover(true)}\n        onMouseLeave={() => sethover(false)}\n        onMouseOver={() => sethover(true)}\n        style={{\n          transform: y\n            .interpolate({\n              range: [0, 1],\n              output: [1, 1.1]\n            })\n            .interpolate(y => `scale(${y})`)\n        }}\n      >\n        <animated.div\n          style={{\n            transform: x\n              .interpolate({\n                range: [0, 0.55, 1],\n                output: [1, 1.1, 1]\n              })\n              .interpolate(x => `scale(${x})`)\n          }}\n        >\n          <img src={require(`../../assets/${src}.png`)} />\n        </animated.div>\n      </animated.div>\n    </div>\n  )\n}\n\nexport default Animoji\n","import React, { useState } from 'react';\nimport './App.css';\nimport Animoji from './components/Animoji/Animoji';\nimport boo from './assets/boo.mp3'\nimport yes from './assets/yes.mp3'\nimport lol from './assets/lol.mp3'\nimport brainfuck from './assets/brainfuck.mp3'\nimport wow from './assets/wow.mp3'\nimport love from './assets/love.mp3'\nimport thinking from './assets/thinking.mp3'\n\nfunction App() {\n  const [active, setactive] = useState('')\n  return (\n    <div className=\"App\">\n      <h1>say it with ola</h1>\n      <div className=\"moji\" >\n        <Animoji src={'yes'} audio={new Audio(yes)} setactive={setactive} active={active} />\n        <Animoji src={'lol'} audio={new Audio(lol)} setactive={setactive} active={active} />\n        <Animoji src={'love'} audio={new Audio(love)} setactive={setactive} active={active} />\n        <Animoji src={'boo'} audio={new Audio(boo)}setactive={setactive} active={active} />\n        <Animoji src={'thinking'} audio={new Audio(thinking)} setactive={setactive} active={active} />\n        <Animoji src={'wow'} audio={new Audio(wow)} setactive={setactive} active={active} />\n        <Animoji src={'brainfuck'} audio={new Audio(brainfuck)} setactive={setactive} active={active} />\n      </div>\n      <p className=\"foo\">this project was created with <span>love</span></p>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}